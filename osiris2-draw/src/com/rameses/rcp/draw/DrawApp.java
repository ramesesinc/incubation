package com.rameses.rcp.draw;

import com.rameses.rcp.draw.figures.ImageFigure;
import com.rameses.rcp.draw.figures.LineFigure;
import com.rameses.rcp.draw.figures.PolyLineFigure;
import com.rameses.rcp.draw.figures.RectangleFigure;
import com.rameses.rcp.draw.figures.WorkflowStartNode;
import com.rameses.rcp.draw.interfaces.Canvas;
import com.rameses.rcp.draw.interfaces.Drawing;
import com.rameses.rcp.draw.interfaces.Editor;
import com.rameses.rcp.draw.support.AttributeKeys;
import com.rameses.rcp.draw.tools.ConnectorTool;
import com.rameses.rcp.draw.tools.CreationTool;
import com.rameses.rcp.draw.tools.LineTool;
import com.rameses.rcp.draw.tools.PolyLineTool;
import com.rameses.rcp.draw.tools.SelectionTool;
import com.rameses.rcp.draw.support.DrawingBuilder;
import com.rameses.rcp.draw.tools.ImageTool;
import com.rameses.rcp.draw.tools.TextTool;
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.image.RenderedImage;
import java.io.File;
import java.io.FileWriter;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.UIManager;



public class DrawApp extends javax.swing.JFrame {
    private Editor editor;
    
    public DrawApp() {
        initComponents();
        createEditor();
        JScrollPane scroller = new JScrollPane((Component)editor.getCanvas());
        add(scroller, BorderLayout.CENTER);
        setPreferredSize(new Dimension(800,600));
        pack();
    }
    
    private void createEditor(){
        editor = new DrawingEditor();
        editor.setDrawing(createDrawing());
        editor.setCanvas(createCanvas());
        btnInteractive.setSelected(editor.isInteractive());
    }
    
    private Canvas createCanvas(){
        Canvas canvas = new DrawCanvas();
        canvas.setEditor(editor);
        return canvas;
    }
    private Drawing createDrawing(){
        Drawing drawing = new StdDrawing();
//        Figure f = new TextFigure("Hello World", 0, 12);
//        drawing.addFigure(f);
        return drawing;
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        toolbar = new javax.swing.JToolBar();
        btnNew = new javax.swing.JButton();
        btnOpen = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnSaveImage = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnSelect = new javax.swing.JButton();
        btnRect = new javax.swing.JButton();
        btnLine = new javax.swing.JButton();
        btnPolyLine = new javax.swing.JButton();
        btnText = new javax.swing.JButton();
        btnImage = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnStart = new javax.swing.JButton();
        btnConnector = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btnInteractive = new javax.swing.JToggleButton();
        btnRotate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        toolbar.setRollover(true);
        toolbar.setPreferredSize(new java.awt.Dimension(13, 25));
        toolbar.setVerifyInputWhenFocusTarget(false);

        btnNew.setText("New");
        btnNew.setFocusable(false);
        btnNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        toolbar.add(btnNew);

        btnOpen.setText("Open");
        btnOpen.setFocusable(false);
        btnOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });
        toolbar.add(btnOpen);

        btnSave.setText("Save");
        btnSave.setFocusable(false);
        btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        toolbar.add(btnSave);

        btnSaveImage.setText("Save Image");
        btnSaveImage.setFocusable(false);
        btnSaveImage.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSaveImage.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSaveImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveImageActionPerformed(evt);
            }
        });
        toolbar.add(btnSaveImage);
        toolbar.add(jSeparator1);

        btnSelect.setText("Select");
        btnSelect.setFocusable(false);
        btnSelect.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSelect.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });
        toolbar.add(btnSelect);

        btnRect.setText("Rectangle");
        btnRect.setFocusable(false);
        btnRect.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRect.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRectActionPerformed(evt);
            }
        });
        toolbar.add(btnRect);

        btnLine.setText("Line");
        btnLine.setFocusable(false);
        btnLine.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLine.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLineActionPerformed(evt);
            }
        });
        toolbar.add(btnLine);

        btnPolyLine.setText("Polyline");
        btnPolyLine.setFocusable(false);
        btnPolyLine.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPolyLine.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPolyLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPolyLineActionPerformed(evt);
            }
        });
        toolbar.add(btnPolyLine);

        btnText.setText("Text");
        btnText.setFocusable(false);
        btnText.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnText.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTextActionPerformed(evt);
            }
        });
        toolbar.add(btnText);

        btnImage.setText("Image");
        btnImage.setFocusable(false);
        btnImage.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnImage.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImageActionPerformed(evt);
            }
        });
        toolbar.add(btnImage);
        toolbar.add(jSeparator2);

        btnStart.setText("Start");
        btnStart.setFocusable(false);
        btnStart.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnStart.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });
        toolbar.add(btnStart);

        btnConnector.setText("Connector");
        btnConnector.setFocusable(false);
        btnConnector.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnConnector.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnConnector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectorActionPerformed(evt);
            }
        });
        toolbar.add(btnConnector);
        toolbar.add(jSeparator3);

        btnInteractive.setText("Interactive");
        btnInteractive.setFocusable(false);
        btnInteractive.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnInteractive.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnInteractive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInteractiveActionPerformed(evt);
            }
        });
        toolbar.add(btnInteractive);

        btnRotate.setText("Rotate");
        btnRotate.setFocusable(false);
        btnRotate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRotate.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRotate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRotateActionPerformed(evt);
            }
        });
        toolbar.add(btnRotate);

        getContentPane().add(toolbar, java.awt.BorderLayout.NORTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        editor.setCurrentTool(new SelectionTool(editor));
    }//GEN-LAST:event_btnSelectActionPerformed

    private void btnRectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRectActionPerformed
        editor.setCurrentTool(new CreationTool(editor, RectangleFigure.class));
    }//GEN-LAST:event_btnRectActionPerformed

    private void btnLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLineActionPerformed
        editor.setCurrentTool(new LineTool(editor, LineFigure.class));
    }//GEN-LAST:event_btnLineActionPerformed

    private void btnPolyLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPolyLineActionPerformed
        editor.setCurrentTool(new PolyLineTool(editor, PolyLineFigure.class));
    }//GEN-LAST:event_btnPolyLineActionPerformed

    private void btnConnectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectorActionPerformed
        editor.setCurrentTool(new ConnectorTool(editor));
    }//GEN-LAST:event_btnConnectorActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String xml = editor.getDrawing().getXml();
        JFileChooser jfc = new JFileChooser();
        int ret = jfc.showSaveDialog(this);
        if (ret == JFileChooser.APPROVE_OPTION){
            saveFile(jfc.getSelectedFile(), xml);
            JOptionPane.showMessageDialog(this, "Saved.");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnInteractiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInteractiveActionPerformed
        editor.setInteractive(!editor.isInteractive());
    }//GEN-LAST:event_btnInteractiveActionPerformed

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        Drawing drawing = openDrawing();
        if (drawing != null){
            editor.setInteractive(false);
            editor.setDrawing(drawing);
            editor.reset();
            editor.setInteractive(true);
            
        }
    }//GEN-LAST:event_btnOpenActionPerformed

    private void btnTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTextActionPerformed
        editor.setCurrentTool(new TextTool(editor));
    }//GEN-LAST:event_btnTextActionPerformed

    private void btnImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImageActionPerformed
        editor.setCurrentTool(new ImageTool(editor, ImageFigure.class));
    }//GEN-LAST:event_btnImageActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        editor.setCurrentTool(new CreationTool(editor, WorkflowStartNode.class));
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        editor.getDrawing().clearFigures();
        editor.getCanvas().refresh();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveImageActionPerformed
        Image img = editor.getImage();
        if (img != null){
            JFileChooser jfc = new JFileChooser();
            int ret = jfc.showSaveDialog(this);
            if (ret == JFileChooser.APPROVE_OPTION){
                saveImage(jfc.getSelectedFile(), img);
                JOptionPane.showMessageDialog(this, "Saved.");
            }
        }
    }//GEN-LAST:event_btnSaveImageActionPerformed

    private void btnRotateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRotateActionPerformed
        int rotation = Integer.parseInt(JOptionPane.showInputDialog("Enter Rotation (degree):"));
        editor.propertyChanged(AttributeKeys.ROTATION_ANGLE, rotation);
    }//GEN-LAST:event_btnRotateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DrawApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DrawApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DrawApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DrawApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DrawApp().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConnector;
    private javax.swing.JButton btnImage;
    private javax.swing.JToggleButton btnInteractive;
    private javax.swing.JButton btnLine;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton btnPolyLine;
    private javax.swing.JButton btnRect;
    private javax.swing.JButton btnRotate;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSaveImage;
    private javax.swing.JButton btnSelect;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnText;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar toolbar;
    // End of variables declaration//GEN-END:variables

    private void saveFile(File file, String xml) {
        FileWriter writer = null;
        
        try{
            writer = new FileWriter(file);
            writer.write(xml);
            writer.flush();
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
        finally{
            if (writer != null){
                try { writer.close(); 
                }
                catch(Exception e){
                }
            }
        }
    }
    
     private void saveImage(File file, Image img) {
        try{
            ImageIO.write((RenderedImage)img, "png", file);
        }
        catch(Exception ex){
            showError(ex);
        }
    }

    private Drawing openDrawing() {
        JFileChooser jfc = new JFileChooser();
        int ret = jfc.showOpenDialog(this);
        if (ret == JFileChooser.APPROVE_OPTION){
            DrawingBuilder builder = new DrawingBuilder();
            return builder.buildDrawing(jfc.getSelectedFile());
        }
        return null;
    }

    private void showError(Exception ex) {
        JOptionPane.showMessageDialog(this, ex.getMessage(), "Error",JOptionPane.OK_OPTION);
    }
}
