import com.rameses.annotations.*;
import com.rameses.util.*;

/*********************************************************************************
* This handles the remote script caching 
*********************************************************************************/
class RemoteScriptExecutor {

    @XConnection('remote-script-mq') 
    def mqconn;

    @Service(dynamic=true)
    def dynSvc;

    @Service("RemoteScriptClientService")
    def clientSvc;

    @OnMessage( 'remote-script-mq' ) 
    public void onreceive( def req ) {
        if((req instanceof Map) && req.serviceName !=null) {
            def svc = dynSvc.lookup( "remote/"+req.serviceName );
            def r = null;
            try {
                r = svc.invokeMethod( req.methodName, req.args );
            }
            catch(e) {
                r = e;
            }

            def encdata = new Base64Cipher().encode( r ); 
            mqconn.send( encdata, req.tokenid ); 
        }
        else { 
            clientSvc.notifyStatus( req );
        }
    } 


}
