import com.rameses.annotations.*;

/*********************************************************************************
* This handles the remote script caching 
*********************************************************************************/
class RemoteScriptExecutor {

    @Service(value='RemoteScriptResponseService', connection="remote-script-service") 
    def remoteResponseSvc; 

    @Service(dynamic=true)
    def dynSvc;

    @Service("RemoteScriptClientService")
    def clientSvc;

    @OnMessage( 'remote-script-mq' ) 
    public void onreceive( def req ) {
        if((req instanceof Map) && req.serviceName !=null) {
            def svc = dynSvc.lookup( "remote/"+req.serviceName );
            def r = null;
            try {
                r = svc.invokeMethod( req.methodName, req.args );
            }
            catch(e) {
                r = e;
            }
            def resp = [
                key : req.key,
                exchange: req.exchange,
                tokenid: req.tokenid,
                data: r
            ];
            remoteResponseSvc.postResponse( resp );
        }
        else {
            clientSvc.notifyStatus( req );
        }
    } 


}
